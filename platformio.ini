[platformio]
default_envs = custom

[layout]
hres = 480
vres = 320

[m5core]
hres = 320
vres = 240

; uncomment for demo widgets
; [custom]
; extends = layout
; build_src_filter =
;   +<../lib/lvgl/demos>
; build_flags = 
;   -D LV_USE_DEMO_WIDGETS=1
;   -D INCLUDE_1=\"demos/lv_demos.h\"
;   -D INIT_FUNCTION_1=lv_demo_widgets
; lib_deps =

; ; uncomment for keypad/encoder demo
; [custom]
; extends = layout
; build_flags = 
;   -D LV_USE_DEMO_KEYPAD_AND_ENCODER=1
;   -D INIT_FUNCTION_1=lv_demo_keypad_encoder
;   -D INCLUDE_1=\"demos/lv_demos.h\"
; build_src_filter =
;   +<../lib/lvgl/demos>
; lib_deps =

; ; uncomment for music demo
; [custom]
; extends = layout
; hres = 480
; vres = 272
; build_flags = 
;   -DLV_USE_DEMO_MUSIC=1
;   -DLV_FONT_MONTSERRAT_12
;   -DLV_FONT_MONTSERRAT_14  
;   -DLV_FONT_MONTSERRAT_16
;   -DLV_FONT_MONTSERRAT_32
;   -DLV_FONT_MONTSERRAT_22
;   -ULV_DEMO_MUSIC_LARGE
;   -DINIT_FUNCTION_1=lv_demo_music
;   -DINCLUDE_1=\"demos/lv_demos.h\"
; build_src_filter =
;   +<../lib/lvgl/demos/music/**/*.*>
; lib_deps =

; uncomment for flowsensor UI
; [custom]
; extends = m5core
; build_src_filter =
;   +<../../flowsensor/src/ui/**/*.*>
;   +<../../flowsensor/simulator/**.*>
; build_flags = 
;   -I../flowsensor/src/ui
;   -D INIT_FUNCTION_1=ui_init
;   -D INCLUDE_1=\"ui.h\"
; lib_deps =

; uncomment for esp32-imu-baro UI
[custom]
extends = m5core
build_src_filter =
  +<../../esp32-imu-baro/src/ui/**/*.*>
  +<../../esp32-imu-baro/simulator/**.*>
build_flags = 
  -I../esp32-imu-baro/src/ui
  -D INIT_FUNCTION_1=ui_init
  -D INCLUDE_1=\"ui.h\"
lib_deps =

; Shared options
[env]
build_flags =
  ; Don't use lv_conf.h. Tweak params via platfom.ini.
  -D LV_CONF_SKIP
  -D LV_CONF_INCLUDE_SIMPLE
  ${custom.build_flags}
lib_deps =
  ${custom.lib_deps}
lib_archive = false


[emulator_64bits]
platform = native@^1.1.3
extra_scripts = support/sdl2_build_extra.py
build_flags =
  ${env.build_flags}
  ${custom.build_flags}
  ; -D LV_LOG_LEVEL=LV_LOG_LEVEL_INFO
  -D LV_LOG_PRINTF=1
  ; Add recursive dirs for hal headers search
  !python -c "import os; print(' '.join(['-I {}'.format(i[0].replace('\x5C','/')) for i in os.walk('hal/sdl2')]))"
  -L /opt/homebrew/opt/sdl2/lib
  -lSDL2
  ; SDL drivers options
  -D LV_LVGL_H_INCLUDE_SIMPLE
  -D LV_DRV_NO_CONF
  -D USE_SDL
  -DSDL_HOR_RES=${custom.hres}
  -DSDL_VER_RES=${custom.vres}
  -D SDL_ZOOM=1
  -I /opt/homebrew/opt/sdl2/include
  -D SDL_INCLUDE_PATH="\"SDL2/SDL.h\""

  ; LVGL memory options, setup for the demo to run properly
  -D LV_MEM_CUSTOM=1
  -D LV_MEM_SIZE="(128U * 1024U)"
  
lib_deps =
  ${env.lib_deps}
build_src_filter =
  +<*>
  +<../hal/sdl2>
  ${custom.build_src_filter}

[env:custom]
extends = custom, emulator_64bits
; extends = env, demo_widgets, emulator_64bits
targets = execute